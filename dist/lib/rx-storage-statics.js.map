{"version":3,"file":"rx-storage-statics.js","names":["_rxError","require","_queryPlanner","_rxSchemaHelper","_rxQueryMingo","_util","_utils","RxStorageDefaultStatics","prepareQuery","schema","mutateableQuery","sort","newRxError","query","queryPlan","getQueryPlan","getSortComparator","preparedQuery","getDefaultSortComparator","getQueryMatcher","_schema","mingoQuery","getMingoQuery","selector","fun","doc","_deleted","cursor","find","next","checkpointSchema","DEFAULT_CHECKPOINT_SCHEMA","exports","sortParts","forEach","sortBlock","key","Object","keys","direction","values","push","getValueFn","objectPathMonad","a","b","i","length","sortPart","valueA","valueB","ret","mingoSortComparator"],"sources":["../../src/rx-storage-statics.ts"],"sourcesContent":["import type {\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageStatics,\n    FilledMangoQuery,\n    MangoQuery,\n    DefaultPreparedQuery,\n    MangoQuerySortDirection,\n    DeterministicSortComparator,\n    QueryMatcher\n} from './types';\nimport { newRxError } from './rx-error';\nimport { getQueryPlan } from './query-planner';\nimport { DEFAULT_CHECKPOINT_SCHEMA } from './rx-schema-helper';\nimport { getMingoQuery } from './rx-query-mingo';\n\nimport {\n    DEFAULT_COMPARATOR as mingoSortComparator\n} from 'mingo/util';\nimport { objectPathMonad, ObjectPathMonadFunction } from './plugins/utils';\n\n\n/**\n * Most RxStorage implementations use these static functions.\n * But you can use anything that implements the interface,\n * for example if your underlying database already has a query engine.\n */\nexport const RxStorageDefaultStatics: RxStorageStatics = {\n    prepareQuery<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: FilledMangoQuery<RxDocType>\n    ): DefaultPreparedQuery<RxDocType> {\n\n        if (!mutateableQuery.sort) {\n            throw newRxError('SNH', {\n                query: mutateableQuery\n            });\n        }\n\n        /**\n         * Store the query plan together with the\n         * prepared query to save performance.\n         */\n        const queryPlan = getQueryPlan(\n            schema,\n            mutateableQuery\n        );\n\n        return {\n            query: mutateableQuery,\n            queryPlan\n        };\n    },\n\n    getSortComparator<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        preparedQuery: DefaultPreparedQuery<RxDocType>\n    ): DeterministicSortComparator<RxDocType> {\n        return getDefaultSortComparator(schema, preparedQuery.query);\n    },\n\n    getQueryMatcher<RxDocType>(\n        _schema: RxJsonSchema<RxDocType>,\n        preparedQuery: DefaultPreparedQuery<RxDocType>\n    ): QueryMatcher<RxDocumentData<RxDocType>> {\n        const query = preparedQuery.query;\n        const mingoQuery = getMingoQuery(query.selector);\n        const fun: QueryMatcher<RxDocumentData<RxDocType>> = (doc: RxDocumentData<RxDocType>) => {\n            if (doc._deleted) {\n                return false;\n            }\n            const cursor = mingoQuery.find([doc]);\n            const next = cursor.next();\n            if (next) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n        return fun;\n    },\n\n    checkpointSchema: DEFAULT_CHECKPOINT_SCHEMA\n\n};\n\n/**\n * Default mango query sort comparator.\n * @hotPath\n */\nexport function getDefaultSortComparator<RxDocType>(\n    _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: MangoQuery<RxDocType>\n): DeterministicSortComparator<RxDocType> {\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n    const sortParts: {\n        key: string;\n        direction: MangoQuerySortDirection;\n        getValueFn: ObjectPathMonadFunction<RxDocType>;\n    }[] = [];\n    query.sort.forEach(sortBlock => {\n        const key = Object.keys(sortBlock)[0];\n        const direction = Object.values(sortBlock)[0];\n        sortParts.push({\n            key,\n            direction,\n            getValueFn: objectPathMonad(key)\n        });\n    });\n    const fun: DeterministicSortComparator<RxDocType> = (a: RxDocType, b: RxDocType) => {\n        for (let i = 0; i < sortParts.length; ++i) {\n            const sortPart = sortParts[i];\n            const valueA = sortPart.getValueFn(a);\n            const valueB = sortPart.getValueFn(b);\n            if (valueA !== valueB) {\n                const ret = sortPart.direction === 'asc' ? mingoSortComparator(valueA, valueB) : mingoSortComparator(valueB, valueA);\n                return ret as any;\n            }\n        }\n    };\n\n    return fun;\n}\n"],"mappings":";;;;;;;AAWA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAEA,IAAAI,KAAA,GAAAJ,OAAA;AAGA,IAAAK,MAAA,GAAAL,OAAA;AAGA;AACA;AACA;AACA;AACA;AACO,IAAMM,uBAAyC,GAAG;EACrDC,YAAYA,CACRC,MAA+C,EAC/CC,eAA4C,EACb;IAE/B,IAAI,CAACA,eAAe,CAACC,IAAI,EAAE;MACvB,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;QACpBC,KAAK,EAAEH;MACX,CAAC,CAAC;IACN;;IAEA;AACR;AACA;AACA;IACQ,IAAMI,SAAS,GAAG,IAAAC,0BAAY,EAC1BN,MAAM,EACNC,eAAe,CAClB;IAED,OAAO;MACHG,KAAK,EAAEH,eAAe;MACtBI;IACJ,CAAC;EACL,CAAC;EAEDE,iBAAiBA,CACbP,MAA+C,EAC/CQ,aAA8C,EACR;IACtC,OAAOC,wBAAwB,CAACT,MAAM,EAAEQ,aAAa,CAACJ,KAAK,CAAC;EAChE,CAAC;EAEDM,eAAeA,CACXC,OAAgC,EAChCH,aAA8C,EACP;IACvC,IAAMJ,KAAK,GAAGI,aAAa,CAACJ,KAAK;IACjC,IAAMQ,UAAU,GAAG,IAAAC,2BAAa,EAACT,KAAK,CAACU,QAAQ,CAAC;IAChD,IAAMC,GAA4C,GAAIC,GAA8B,IAAK;MACrF,IAAIA,GAAG,CAACC,QAAQ,EAAE;QACd,OAAO,KAAK;MAChB;MACA,IAAMC,MAAM,GAAGN,UAAU,CAACO,IAAI,CAAC,CAACH,GAAG,CAAC,CAAC;MACrC,IAAMI,IAAI,GAAGF,MAAM,CAACE,IAAI,EAAE;MAC1B,IAAIA,IAAI,EAAE;QACN,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ,CAAC;IACD,OAAOL,GAAG;EACd,CAAC;EAEDM,gBAAgB,EAAEC;AAEtB,CAAC;;AAED;AACA;AACA;AACA;AAHAC,OAAA,CAAAzB,uBAAA,GAAAA,uBAAA;AAIO,SAASW,wBAAwBA,CACpCE,OAAgD,EAChDP,KAA4B,EACU;EACtC,IAAI,CAACA,KAAK,CAACF,IAAI,EAAE;IACb,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MAAEC;IAAM,CAAC,CAAC;EACtC;EACA,IAAMoB,SAIH,GAAG,EAAE;EACRpB,KAAK,CAACF,IAAI,CAACuB,OAAO,CAACC,SAAS,IAAI;IAC5B,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;IACrC,IAAMI,SAAS,GAAGF,MAAM,CAACG,MAAM,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7CF,SAAS,CAACQ,IAAI,CAAC;MACXL,GAAG;MACHG,SAAS;MACTG,UAAU,EAAE,IAAAC,sBAAe,EAACP,GAAG;IACnC,CAAC,CAAC;EACN,CAAC,CAAC;EACF,IAAMZ,GAA2C,GAAGA,CAACoB,CAAY,EAAEC,CAAY,KAAK;IAChF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,SAAS,CAACc,MAAM,EAAE,EAAED,CAAC,EAAE;MACvC,IAAME,QAAQ,GAAGf,SAAS,CAACa,CAAC,CAAC;MAC7B,IAAMG,MAAM,GAAGD,QAAQ,CAACN,UAAU,CAACE,CAAC,CAAC;MACrC,IAAMM,MAAM,GAAGF,QAAQ,CAACN,UAAU,CAACG,CAAC,CAAC;MACrC,IAAII,MAAM,KAAKC,MAAM,EAAE;QACnB,IAAMC,GAAG,GAAGH,QAAQ,CAACT,SAAS,KAAK,KAAK,GAAG,IAAAa,wBAAmB,EAACH,MAAM,EAAEC,MAAM,CAAC,GAAG,IAAAE,wBAAmB,EAACF,MAAM,EAAED,MAAM,CAAC;QACpH,OAAOE,GAAG;MACd;IACJ;EACJ,CAAC;EAED,OAAO3B,GAAG;AACd"}