{"version":3,"file":"rx-document.js","names":["_operators","require","_utils","_rxError","_hooks","_rxChangeEvent","_overwritable","_rxSchemaHelper","_rxStorageHelper","_incrementalWrite","basePrototype","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","map","d","_deleted","deleted","getLatest","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","filter","changeEvent","isLocal","documentId","getDocumentDataOfRxChangeEvent","startWith","distinctUntilChanged","prev","curr","docData","shareReplay","RXJS_SHARE_REPLAY_DEFAULTS","get$","path","overwritable","isDevMode","includes","newRxError","finalFields","schemaObj","getSchemaByObjectPath","jsonSchema","data","getProperty","populate","value","get","PROMISE_RESOLVE_NULL","ref","refCollection","database","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","valueObj","isArray","deepFreezeWhenDevMode","clone","defineGetterSetter","toJSON","withMetaFields","flatClone","_attachments","_meta","toMutableJSON","update","_updateObj","pluginMissing","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","modifierFromPublicToInternal","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","id","document","beforeDocumentUpdateWrite","writeResult","storageInstance","bulkWrite","previous","isError","error","throwIfIsStorageWriteError","_runHooks","getFromObjectOrThrow","success","remove","Promise","reject","deletedData","removedDocData","removed","incrementalRemove","newDoc","destroy","exports","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","prototype","thisObj","pathProperties","properties","keys","key","fullPath","trimDots","__defineGetter__","ret","defineProperty","enumerable","configurable","__defineSetter__","val","set","createWithConstructor","jsonData","doc","runPluginHooks","isRxDocument","obj","assign","validateChange"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import {\n    Observable\n} from 'rxjs';\nimport {\n    distinctUntilChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith\n} from 'rxjs/operators';\nimport {\n    clone,\n    trimDots,\n    pluginMissing,\n    flatClone,\n    PROMISE_RESOLVE_NULL,\n    RXJS_SHARE_REPLAY_DEFAULTS,\n    getFromObjectOrThrow,\n    getProperty\n} from './plugins/utils';\nimport {\n    newRxError\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\n\nimport type {\n    RxDocument,\n    RxCollection,\n    RxDocumentData,\n    RxDocumentWriteData,\n    UpdateQuery,\n    CRDTEntry,\n    ModifyFunction\n} from './types';\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event';\nimport { overwritable } from './overwritable';\nimport { getSchemaByObjectPath } from './rx-schema-helper';\nimport { throwIfIsStorageWriteError } from './rx-storage-helper';\nimport { modifierFromPublicToInternal } from './incremental-write';\n\nexport const basePrototype = {\n    get primaryPath() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.collection.schema.primaryPath;\n    },\n    get primary() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return (_this._data as any)[_this.primaryPath];\n    },\n    get revision() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._rev;\n    },\n    get deleted$() {\n        const _this: RxDocument<any> = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this.$.pipe(\n            map((d: any) => d._deleted)\n        );\n    },\n    get deleted() {\n        const _this: RxDocument = this as any;\n        if (!_this.isInstanceOfRxDocument) {\n            return undefined;\n        }\n        return _this._data._deleted;\n    },\n\n    getLatest(this: RxDocument): RxDocument {\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\n    },\n\n    /**\n     * returns the observable which emits the plain-data of this document\n     */\n    get $(): Observable<RxDocumentData<any>> {\n        const _this: RxDocument = this as any;\n        return _this.collection.$.pipe(\n            filter(changeEvent => !changeEvent.isLocal),\n            filter(changeEvent => changeEvent.documentId === this.primary),\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\n            startWith(_this.collection._docCache.getLatestDocumentData(this.primary)),\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\n        );\n    },\n\n    /**\n     * returns observable of the value of the given path\n     */\n    get$(this: RxDocument, path: string): Observable<any> {\n        if (overwritable.isDevMode()) {\n            if (path.includes('.item.')) {\n                throw newRxError('DOC1', {\n                    path\n                });\n            }\n\n            if (path === this.primaryPath) {\n                throw newRxError('DOC2');\n            }\n\n            // final fields cannot be modified and so also not observed\n            if (this.collection.schema.finalFields.includes(path)) {\n                throw newRxError('DOC3', {\n                    path\n                });\n            }\n\n            const schemaObj = getSchemaByObjectPath(\n                this.collection.schema.jsonSchema,\n                path\n            );\n            if (!schemaObj) {\n                throw newRxError('DOC4', {\n                    path\n                });\n            }\n        }\n\n        return this.$\n            .pipe(\n                map(data => getProperty(data, path)),\n                distinctUntilChanged()\n            );\n    },\n\n    /**\n     * populate the given path\n     */\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\n        const schemaObj = getSchemaByObjectPath(\n            this.collection.schema.jsonSchema,\n            path\n        );\n        const value = this.get(path);\n        if (!value) {\n            return PROMISE_RESOLVE_NULL;\n        }\n        if (!schemaObj) {\n            throw newRxError('DOC5', {\n                path\n            });\n        }\n        if (!schemaObj.ref) {\n            throw newRxError('DOC6', {\n                path,\n                schemaObj\n            });\n        }\n\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\n        if (!refCollection) {\n            throw newRxError('DOC7', {\n                ref: schemaObj.ref,\n                path,\n                schemaObj\n            });\n        }\n\n        if (schemaObj.type === 'array') {\n            return refCollection.findByIds(value).exec().then(res => {\n                const valuesIterator = res.values();\n                return Array.from(valuesIterator) as any;\n            });\n        } else {\n            return refCollection.findOne(value).exec();\n        }\n    },\n\n    /**\n     * get data by objectPath\n     */\n    get(this: RxDocument, objPath: string): any | null {\n        if (!this._data) return undefined;\n        let valueObj = getProperty(this._data, objPath);\n\n        // direct return if array or non-object\n        if (\n            typeof valueObj !== 'object' ||\n            Array.isArray(valueObj)\n        ) {\n            return overwritable.deepFreezeWhenDevMode(valueObj);\n        }\n\n        /**\n         * TODO find a way to deep-freeze together with defineGetterSetter\n         * so we do not have to do a deep clone here.\n         */\n        valueObj = clone(valueObj);\n        defineGetterSetter(\n            this.collection.schema,\n            valueObj,\n            objPath,\n            this as any\n        );\n        return valueObj;\n    },\n\n    toJSON(this: RxDocument, withMetaFields = false) {\n        if (!withMetaFields) {\n            const data = flatClone(this._data);\n            delete (data as any)._rev;\n            delete (data as any)._attachments;\n            delete (data as any)._deleted;\n            delete (data as any)._meta;\n            return overwritable.deepFreezeWhenDevMode(data);\n        } else {\n            return overwritable.deepFreezeWhenDevMode(this._data);\n        }\n    },\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\n        return clone(this.toJSON(withMetaFields as any));\n    },\n\n    /**\n     * updates document\n     * @overwritten by plugin (optional)\n     * @param updateObj mongodb-like syntax\n     */\n    update(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\n        throw pluginMissing('update');\n    },\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\n        throw pluginMissing('crdt');\n    },\n    putAttachment() {\n        throw pluginMissing('attachments');\n    },\n    getAttachment() {\n        throw pluginMissing('attachments');\n    },\n    allAttachments() {\n        throw pluginMissing('attachments');\n    },\n    get allAttachments$() {\n        throw pluginMissing('attachments');\n    },\n\n    async modify<RxDocType>(\n        this: RxDocument<RxDocType>,\n        mutationFunction: ModifyFunction<RxDocType>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        const oldData = this._data;\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\n        return this._saveData(newData, oldData) as any;\n    },\n\n    /**\n     * runs an incremental update over the document\n     * @param function that takes the document-data and returns a new data-object\n     */\n    incrementalModify(\n        this: RxDocument,\n        mutationFunction: ModifyFunction<any>,\n        // used by some plugins that wrap the method\n        _context?: string\n    ): Promise<RxDocument> {\n        return this.collection.incrementalWriteQueue.addWrite(\n            this._data,\n            modifierFromPublicToInternal(mutationFunction)\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\n    },\n\n    patch<RxDocType>(\n        this: RxDocument<RxDocType>,\n        patch: Partial<RxDocType>\n    ) {\n        const oldData = this._data;\n        const newData = clone(oldData);\n        Object\n            .entries(patch)\n            .forEach(([k, v]) => {\n                (newData as any)[k] = v;\n            });\n        return this._saveData(newData, oldData);\n    },\n\n    /**\n     * patches the given properties\n     */\n    incrementalPatch<RxDocumentType = any>(\n        this: RxDocument<RxDocumentType>,\n        patch: Partial<RxDocumentType>\n    ): Promise<RxDocument<RxDocumentType>> {\n        return this.incrementalModify((docData) => {\n            Object\n                .entries(patch)\n                .forEach(([k, v]) => {\n                    (docData as any)[k] = v;\n                });\n            return docData;\n        });\n    },\n\n    /**\n     * saves the new document-data\n     * and handles the events\n     */\n    async _saveData<RxDocType>(\n        this: RxDocument<RxDocType>,\n        newData: RxDocumentWriteData<RxDocType>,\n        oldData: RxDocumentData<RxDocType>\n    ): Promise<RxDocument<RxDocType>> {\n        newData = flatClone(newData);\n\n        // deleted documents cannot be changed\n        if (this._data._deleted) {\n            throw newRxError('DOC11', {\n                id: this.primary,\n                document: this\n            });\n        }\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\n        const writeResult = await this.collection.storageInstance.bulkWrite([{\n            previous: oldData,\n            document: newData\n        }], 'rx-document-save-data');\n\n        const isError = writeResult.error[this.primary];\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\n\n        await this.collection._runHooks('post', 'save', newData, this);\n        return this.collection._docCache.getCachedRxDocument(\n            getFromObjectOrThrow(writeResult.success, this.primary)\n        );\n    },\n\n    /**\n     * Remove the document.\n     * Notice that there is no hard delete,\n     * instead deleted documents get flagged with _deleted=true.\n     */\n    remove(this: RxDocument): Promise<RxDocument> {\n        const collection = this.collection;\n        if (this.deleted) {\n            return Promise.reject(newRxError('DOC13', {\n                document: this,\n                id: this.primary\n            }));\n        }\n\n        const deletedData = flatClone(this._data);\n        let removedDocData: RxDocumentData<any>;\n        return collection._runHooks('pre', 'remove', deletedData, this)\n            .then(async () => {\n                deletedData._deleted = true;\n                const writeResult = await collection.storageInstance.bulkWrite([{\n                    previous: this._data,\n                    document: deletedData\n                }], 'rx-document-remove');\n                const isError = writeResult.error[this.primary];\n                throwIfIsStorageWriteError(collection, this.primary, deletedData, isError);\n                return getFromObjectOrThrow(writeResult.success, this.primary);\n            })\n            .then((removed) => {\n                removedDocData = removed;\n                return this.collection._runHooks('post', 'remove', deletedData, this);\n            })\n            .then(() => {\n                return this.collection._docCache.getCachedRxDocument(removedDocData);\n            });\n    },\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\n        return this.incrementalModify(async (docData) => {\n            await this.collection._runHooks('pre', 'remove', docData, this);\n            docData._deleted = true;\n            return docData;\n        }).then(async (newDoc) => {\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\n            return newDoc;\n        });\n    },\n    destroy() {\n        throw newRxError('DOC14');\n    }\n};\n\nexport function createRxDocumentConstructor(proto = basePrototype) {\n    const constructor = function RxDocumentConstructor(\n        this: RxDocument,\n        collection: RxCollection,\n        docData: RxDocumentData<any>\n    ) {\n        this.collection = collection;\n\n        // assume that this is always equal to the doc-data in the database\n        this._data = docData;\n\n        /**\n         * because of the prototype-merge,\n         * we can not use the native instanceof operator\n         */\n        this.isInstanceOfRxDocument = true;\n    };\n    constructor.prototype = proto;\n    return constructor;\n}\n\nexport function defineGetterSetter(\n    schema: any,\n    valueObj: any,\n    objPath = '',\n    thisObj = false\n) {\n    if (valueObj === null) return;\n\n\n    let pathProperties = getSchemaByObjectPath(\n        schema.jsonSchema,\n        objPath\n    );\n\n    if (typeof pathProperties === 'undefined') return;\n    if (pathProperties.properties) pathProperties = pathProperties.properties;\n\n    Object.keys(pathProperties)\n        .forEach(key => {\n            const fullPath = trimDots(objPath + '.' + key);\n\n            // getter - value\n            valueObj.__defineGetter__(\n                key,\n                function (this: RxDocument) {\n                    const _this: RxDocument = thisObj ? thisObj : (this as any);\n                    if (!_this.get || typeof _this.get !== 'function') {\n                        /**\n                         * When an object gets added to the state of a vuejs-component,\n                         * it happens that this getter is called with another scope.\n                         * To prevent errors, we have to return undefined in this case\n                         */\n                        return undefined;\n                    }\n                    const ret = _this.get(fullPath);\n                    return ret;\n                }\n            );\n            // getter - observable$\n            Object.defineProperty(valueObj, key + '$', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.get$(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // getter - populate_\n            Object.defineProperty(valueObj, key + '_', {\n                get: function () {\n                    const _this = thisObj ? thisObj : this;\n                    return _this.populate(fullPath);\n                },\n                enumerable: false,\n                configurable: false\n            });\n            // setter - value\n            valueObj.__defineSetter__(key, function (\n                this: RxDocument,\n                val: any\n            ) {\n                const _this: any = thisObj ? thisObj : this;\n                return _this.set(fullPath, val);\n            });\n        });\n}\n\nexport function createWithConstructor<RxDocType>(\n    constructor: any,\n    collection: RxCollection<RxDocType>,\n    jsonData: RxDocumentData<RxDocType>\n): RxDocument<RxDocType> | null {\n    const doc = new constructor(collection, jsonData);\n    runPluginHooks('createRxDocument', doc);\n    return doc;\n}\n\nexport function isRxDocument(obj: any): boolean {\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\n}\n\n\nexport function beforeDocumentUpdateWrite<RxDocType>(\n    collection: RxCollection<RxDocType>,\n    newData: RxDocumentWriteData<RxDocType>,\n    oldData: RxDocumentData<RxDocType>\n): Promise<any> {\n    /**\n     * Meta values must always be merged\n     * instead of overwritten.\n     * This ensures that different plugins do not overwrite\n     * each others meta properties.\n     */\n    newData._meta = Object.assign(\n        {},\n        oldData._meta,\n        newData._meta\n    );\n\n    // ensure modifications are ok\n    if (overwritable.isDevMode()) {\n        collection.schema.validateChange(oldData, newData);\n    }\n    return collection._runHooks('pre', 'save', newData);\n}\n"],"mappings":"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"}